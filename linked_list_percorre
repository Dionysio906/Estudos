#include <stdio.h>
#include <stdlib.h>

// Definindo a estrutura do nó da lista
struct no {
    int dado;
    struct no* next;
};

// Função para criar um novo nó
struct no* criar_no(int dado) {
    struct no* new_no = (struct no*)malloc(sizeof(struct no));
    new_no->dado = dado;
    new_no->next = NULL;
    return new_no;
}

// Função para adicionar um nó no final da lista
struct no* insere_no(struct no* head, int dado) {
    struct no* new_no = criar_no(dado);
    if (head == NULL) {
        return new_no;
    }

    struct no* no_atual = head;
    while (no_atual->next != NULL) {
        no_atual = no_atual->next;
    }
    no_atual->next = new_no;
    return head;
}

// Função para percorrer a lista e imprimir seus elementos
void percorrer_lista(struct no* head) {
    struct no* no_atual = head; // Inicia a partir do primeiro nó
    while (no_atual != NULL) {   // Enquanto houver nós na lista
        printf("%d -> ", no_atual->dado); // Imprime o dado do nó
        no_atual = no_atual->next; // Avança para o próximo nó
    }
    printf("NULL\n"); // Marca o fim da lista
}

// Função principal
int main() {
    struct no* head = NULL;

    // Inserindo alguns elementos na lista
    head = insere_no(head, 1);
    head = insere_no(head, 2);
    head = insere_no(head, 3);
    head = insere_no(head, 4);

    // Chamando a função para percorrer e imprimir a lista
    printf("Percorrendo a lista:\n");
    percorrer_lista(head);

    return 0;
}
